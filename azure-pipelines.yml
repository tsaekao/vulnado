# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'tsaekao-devops(6096605e-8a4a-4d37-9f59-802d3482e3d8)'
    KeyVaultName: 'veracode-keyvault'
    SecretsFilter: '*'
    RunAsPreJob: true

- task: Maven@3
  displayName: 'Build Project'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/?(*.ear|*.war|*.jar)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: VeracodePipelineScan@0
  enabled: false
  inputs:
    VeracodeAPIID: '$(vid)'
    VeracodeAPIsecret: '$(vkey)'
    fileToScan: '$(Build.ArtifactStagingDirectory)/*.war'

- task: Veracode@3
  displayName: Upload & Scan
  enabled: false
  inputs:
    ConnectionDetailsSelection: 'Service Connection'
    AnalysisService: 'verademo-vulnado'
    veracodeAppProfile: 'vulnado'
    version: '$(build.buildNumber)'
    filepath: '$(build.artifactstagingdirectory)'
    createProfile: true
    maximumWaitTime: '360'

- task: CmdLine@2
  inputs:
    script: 'echo $(Password) > secret.txt'

- task: CopyFiles@2
  inputs:
    Contents: secret.txt
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'